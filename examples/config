root = "./"
thread = 8    -- 启动多少个工作线程。通常不要将它配置超过你实际拥有的 CPU 核心数。
logger = nil  -- 它决定了 skynet 内建的 skynet_error 这个 C API 将信息输出到什么文件中。
harbor = 1    -- 这个Skynet的节点编号(可以是 1-255 间的任意整数)
address = "127.0.0.1:2526"    -- 当前 skynet 节点的地址和端口
master = "127.0.0.1:2013"    -- 指定 skynet 控制中心的地址和端口
start = "main"	-- main script    -- 这是 bootstrap 最后一个环节将启动的 lua 服务，也就是你定制的 skynet 节点的主程序。
bootstrap = "snlua bootstrap"    -- skynet 启动的第一个服务以及其启动参数。
standalone = "0.0.0.0:2013"    -- 把这个 skynet 进程作为主进程启动,表示这个进程是主节点，会开启一个控制中心。
luaservice = root.."service/?.lua;"..root.."test/?.lua;"..root.."examples/?.lua"    -- lua 服务代码所在的位置。可以配置多项，以 ; 分割。
lualoader = "lualib/loader.lua"    -- 用哪一个 lua 代码加载 lua 服务。
-- preload = "./examples/preload.lua"	-- run preload.lua before every lua service run
snax = root.."examples/?.lua;"..root.."test/?.lua"    -- 用 snax 框架编写的服务的查找路径。
cpath = root.."cservice/?.so"    -- 用 C 编写的服务模块的位置，通常指 cservice 下那些 .so 文件。
